#부품 찾기

def binary_search(array, target, start, end):
	while start <= end:
		mid = (start + end)
		# 찾은 경우 중간점 인덱스 반환
		if array[mid] == target:
			return mid
		#중간점의 값보다 찾고자 하는 값이 작은 경우 왼쪽 확인
		elif array[mid] > target:
			end = mid -1
		else:
			start = mid +1
	return None
	

n = int(input())
array  = list(map(int, input().split()))
array.sort()
m = int(input())
x = list(map(int, input().split()))

for i in x:
	result = binary_search(array, i, 0, n-1)
	if result != None:
		print('yes', end=' ')
	else:
		print('no', end=' ')






#내가 짠 코드
def binary_search(array, target, start, end):
	if start > end:
		return None
	mid = ( start + end ) // 2
	if array[mid] == target:
		return mid
	elif array[mid] > target:
		return binary_search(array, target, start, mid-1)
	else:	
		return binary_search(array, target, mid + 1, end)
	
n = int(input())
a = list(map(int, input().split()))
m = int(input())
b = list(map(int, input().split()))

a.sort()

for i in b:
	result = binary_search(a, i, 0, n-1)
	if result == None:
		print("no", end=' ')
	else:
		print("yes", end=' ')
